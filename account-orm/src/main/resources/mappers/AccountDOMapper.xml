<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.tony.tonyirl.account.orm.mapper.AccountDOMapper">
  <resultMap id="BaseResultMap" type="me.tony.tonyirl.account.orm.domain.AccountDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account_key" jdbcType="VARCHAR" property="accountKey" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="account_status" jdbcType="VARCHAR" property="accountStatus" typeHandler="me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="visible" jdbcType="BIT" property="visible" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.accountStatusCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler} and #{criterion.secondValue,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.accountStatusCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler} and #{criterion.secondValue,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_key, email, mobile, nickname, account_status, insert_time, update_time, 
    visible
  </sql>
  <select id="selectByExample" parameterType="me.tony.tonyirl.account.orm.domain.AccountDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from e_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from e_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from e_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="me.tony.tonyirl.account.orm.domain.AccountDOExample">
    delete from e_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.tony.tonyirl.account.orm.domain.AccountDO">
    insert into e_account (id, account_key, email, 
      mobile, nickname, account_status, 
      insert_time, update_time, is_visible
      )
    values (#{id,jdbcType=BIGINT}, #{accountKey,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{accountStatus,jdbcType=VARCHAR,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler}, 
      #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{visible,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="me.tony.tonyirl.account.orm.domain.AccountDO">
    insert into e_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountKey != null">
        account_key,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="visible != null">
        visible,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountKey != null">
        #{accountKey,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=VARCHAR,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="visible != null">
        #{visible,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.tony.tonyirl.account.orm.domain.AccountDOExample" resultType="java.lang.Long">
    select count(*) from e_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update e_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.accountKey != null">
        account_key = #{record.accountKey,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=VARCHAR,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler},
      </if>
      <if test="record.insertTime != null">
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.visible != null">
        visible = #{record.visible,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update e_account
    set id = #{record.id,jdbcType=BIGINT},
      account_key = #{record.accountKey,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      account_status = #{record.accountStatus,jdbcType=VARCHAR,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_visible = #{record.visible,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="me.tony.tonyirl.account.orm.domain.AccountDO">
    update e_account
    <set>
      <if test="accountKey != null">
        account_key = #{accountKey,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=VARCHAR,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="visible != null">
        visible = #{visible,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.tony.tonyirl.account.orm.domain.AccountDO">
    update e_account
    set account_key = #{accountKey,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      account_status = #{accountStatus,jdbcType=VARCHAR,typeHandler=me.tony.tonyirl.account.orm.typehandler.AccountStatusEnumTypeHandler},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_visible = #{visible,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>